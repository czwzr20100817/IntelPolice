<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.model.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.model.Role" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="DEPTID" property="deptId" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="LOCKED" property="locked" jdbcType="VARCHAR" />
    <result column="CHANGEIND" property="changeInd" jdbcType="VARCHAR" />
    <result column="ROLEKEY" property="roleKey" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, NAME, DEPTID, TYPE, REMARK, LOCKED, CHANGEIND,ROLEKEY
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from EAROLE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from EAROLE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.model.Role" >
    insert into EAROLE (ID, NAME, DEPTID, 
      TYPE, REMARK, LOCKED, 
      CHANGEIND,ROLEKEY)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{locked,jdbcType=VARCHAR}, 
      #{changeInd,jdbcType=VARCHAR},#{roleKey,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.model.Role" >
    insert into EAROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="deptId != null" >
        DEPTID,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="locked != null" >
        LOCKED,
      </if>
      <if test="changeInd != null" >
        CHANGEIND,
      </if>
      <if test="roleKey != null" >
        ROLEKEY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=VARCHAR},
      </if>
      <if test="changeInd != null" >
        #{changeInd,jdbcType=VARCHAR},
      </if>
      <if test="roleKey != null" >
        #{roleKey,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Role" >
    update EAROLE
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null" >
        DEPTID = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        LOCKED = #{locked,jdbcType=VARCHAR},
      </if>
      <if test="changeInd != null" >
        CHANGEIND = #{changeInd,jdbcType=VARCHAR},
      </if>
      <if test="roleKey != null" >
        ROLEKEY = #{roleKey,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Role" >
    update EAROLE
    set NAME = #{name,jdbcType=VARCHAR},
      DEPTID = #{deptId,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      LOCKED = #{locked,jdbcType=VARCHAR},
      CHANGEIND = #{changeInd,jdbcType=VARCHAR},
      ROLEKEY = #{roleKey,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>