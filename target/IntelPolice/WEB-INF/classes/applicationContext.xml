<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	 xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
 http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/tx
 http://www.springframework.org/schema/tx/spring-tx.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context.xsd
 http://www.springframework.org/schema/aop
 http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 采用注解的方式配置bean -->
	<context:annotation-config />
	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="com.service.impl"/>
	<context:component-scan base-package="com.activiti.service.impl"/>
	<context:component-scan base-package="com.activiti.task"/>
	<context:component-scan base-package="com.activiti"/>
	<context:component-scan base-package="com.analysis"/>
	<!-- 配置： db.properites -> dataSource(连接池) -> SqlSessionFactory -> mapper接口
		-> service（事务） -> Controller ->views -->
	<!-- db.properites -->
	<context:property-placeholder
			location="classpath:jdbc.properties" />
	<!-- 配置数据源 -->

	<bean name="dataSource"
		  class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		  destroy-method="close">
		<!-- 指定连接数据库的JDBC驱动 -->
		<property name="driverClassName" value="${db.driver}" />
		<!-- 连接数据库所用的URL -->
		<property name="url" value="${db.url}" />
		<!-- 连接数据库的用户名 -->
		<property name="username" value="${db.username}" />
		<!-- 连接数据库的密码 -->
		<property name="password" value="${db.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最大空闲 -->
		<!-- <property name="maxIdle" value="20" /> -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="1" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="33" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<!-- 打开 removeAbandoned 功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800 秒，也就是 30 分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭 abanded 连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
	</bean>


	<!-- 事务管理，使用JtaTransactionManager作为全局事务管理器 transaction manager, use JtaTransactionManager for global tx -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
				p:dataSource-ref="dataSource"/>

	<!-- 开启事务注解方式 enable transaction demarcation with annotations -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!--=====================        Mybatis 配置       ==============================   -->
	<!-- define the SqlSessionFactory -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
				p:dataSource-ref="dataSource"
				p:configLocation="classpath:mybatis.xml"
				p:typeAliasesPackage="com.model, com.model.bean, com.analysis.model"
	/>

	<!-- define sqlSessionTemplate -->
	<!--<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">-->
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<!--<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">-->
		<constructor-arg index="0" ref="sqlSessionFactory"/>
		<constructor-arg index="1" value="BATCH"/>
	</beans:bean>

	<!-- scan for mappers and let them be autowired -->
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
				p:basePackage="com.service.mapper com.model.mapper com.analysis.mapper"
				p:sqlSessionTemplateBeanName="sqlSessionTemplate"/>

	<!--spring 容器加载完成的监听器-->
	<bean id="beanDefineConfigue" class="com.listener.WebContextListener"/>
	<bean class="com.utils.SpringContextHolder"  />

	<import resource="applicationContext-activiti.xml"/>
    <import resource="applicationContext_ws.xml"/>
</beans>