<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd  
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd  
                           http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 使用基于注解方式配置事务 -->
<!-- 	<tx:annotation-driven transaction-manager="txManager" /> -->
	<!-- 配置事务 -->
<!-- 	<bean id="txManager" -->
<!-- 		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
<!-- 		<property name="dataSource" ref="dataSource"></property> -->
<!-- 	</bean> -->

	<!-- activiti事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- spring负责创建流程引擎的配置文件 -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置事务管理器，统一事务 -->
		<property name="transactionManager" ref="transactionManager" />
		<!-- 建表策略 -->
		<property name="databaseSchemaUpdate" value="true" />
		<!-- 定时任务 -->
		<property name="jobExecutorActivate" value="false" />
		<!-- 配置历史控制级别
			none: 跳过所有的历史数据。性能最优，但是没有历史数据。
			activity: 保存所有的流程实例和活动信息。只保留最后信息，没有明细信息。
			audit: 默认级别。保存所有的流程实例，任务、活动、表单属性等信息。
			full: 最高级别，最完整的的历史信息。除了audit中的信息外，还包含详细信息。
		 -->
		<property name="history" value="audit" />
	</bean>
	<!-- 创建流程引擎对象 -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>

	<!-- 相当于下面的代码 -->
	<!-- RepositoryServicie repositoryService = processEngine.getRepositoryService(); -->
	<!-- RuntimeServicie repositoryService = processEngine.getRuntimeServicie(); -->
	<!-- TaskServicie taskServicie = processEngine.getTaskServicie(); -->
	<!-- HistoryServicie historyServicie = processEngine.getHistoryServicie(); -->

	<!-- 由流程引擎对象，提供的方法，创建项目中使用的Activiti工作流的Service -->
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	<bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
</beans> 